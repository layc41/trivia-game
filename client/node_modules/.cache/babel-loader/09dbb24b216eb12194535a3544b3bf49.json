{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/claudialay/Desktop/Mthree Projects/trivia-game/client/src/components/Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Container, Col, Card, CardGroup, Row } from \"react-bootstrap\";\nimport { generateQuiz } from \"../utils/API\";\nexport default function Quiz() {\n  _s();\n\n  const [quizData, setQuizData] = useState([]);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      await generateQuiz().then(response => response.json()).then(data => setQuizData(JSON.parse(JSON.stringify(data.results).replace(/&quot;/g, \"''\").replace(/&#039;/g, \"'\"))));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFormSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), quizData.map(quiz => {\n      return /*#__PURE__*/_jsxDEV(CardGroup, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              border: \"dark\",\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  className: \"text-center card-title\",\n                  children: quiz.question\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 39,\n                    columnNumber: 25\n                  }, this), quiz.correct_answer, quiz.incorrect_answers[0]]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Quiz, \"95kM5RrwhwRbhJzHPvK32xDV28A=\");\n\n_c = Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/Users/claudialay/Desktop/Mthree Projects/trivia-game/client/src/components/Quiz.js"],"names":["React","useState","Container","Col","Card","CardGroup","Row","generateQuiz","Quiz","quizData","setQuizData","handleFormSubmit","event","preventDefault","then","response","json","data","JSON","parse","stringify","results","replace","error","console","map","quiz","question","correct_answer","incorrect_answers"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,SAA/B,EAA0CC,GAA1C,QAAqD,iBAArD;AACA,SAASC,YAAT,QAA6B,cAA7B;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMU,gBAAgB,GAAG,MAAOC,KAAP,IAAiB;AAEtCA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAI;AAEA,YAAMN,YAAY,GACjBO,IADK,CACCC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADd,EAELF,IAFK,CAECG,IAAD,IAAUP,WAAW,CAACQ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeH,IAAI,CAACI,OAApB,EAA6BC,OAA7B,CAAqC,SAArC,EAAgD,IAAhD,EAAsDA,OAAtD,CAA8D,SAA9D,EAAyE,GAAzE,CAAX,CAAD,CAFrB,CAAN;AAIH,KAND,CAME,OAAOC,KAAP,EAAc;AAEZC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AAEH;AACJ,GAdD;;AAgBA,sBACE,QAAC,SAAD;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEZ,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGF,QAAQ,CAACgB,GAAT,CAAcC,IAAD,IAAU;AACtB,0BACE,QAAC,SAAD;AAAA,+BACE,QAAC,GAAD;AAAA,iCACE,QAAC,GAAD;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,MAAM,EAAC,MAAb;AAAA,qCACE,QAAC,IAAD,CAAM,IAAN;AAAA,wCACE,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,SAAS,EAAC,wBAAtB;AAAA,4BACGA,IAAI,CAACC;AADR;AAAA;AAAA;AAAA;AAAA,wBADF,eAKE,QAAC,IAAD,CAAM,IAAN;AAAA,0CACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,0BADF,EAEGD,IAAI,CAACE,cAFR,EAGGF,IAAI,CAACG,iBAAL,CAAuB,CAAvB,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,wBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAqBD,KAtBA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BH;;GA/CuBrB,I;;KAAAA,I","sourcesContent":["import React, { useState } from \"react\";\nimport { Container, Col, Card, CardGroup, Row } from \"react-bootstrap\";\nimport { generateQuiz } from \"../utils/API\";\n\nexport default function Quiz() {\n    const [quizData, setQuizData] = useState([]);\n\n    const handleFormSubmit = async (event) => {\n\n        event.preventDefault();\n        try {\n            \n            await generateQuiz()\n            .then((response) => response.json())\n            .then((data) => setQuizData(JSON.parse(JSON.stringify(data.results).replace(/&quot;/g, \"''\").replace(/&#039;/g, \"'\"))))\n            \n        } catch (error) {\n\n            console.error(error);\n\n        }\n    }\n\n    return (\n      <Container>\n        <button onClick={handleFormSubmit}>Submit</button>\n        {quizData.map((quiz) => {\n          return (\n            <CardGroup>\n              <Row>\n                <Col>\n                  <Card border=\"dark\">\n                    <Card.Body>\n                      <Card.Title className=\"text-center card-title\">\n                        {quiz.question}\n                      </Card.Title>\n\n                      <Card.Text>\n                        <Button></Button>\n                        {quiz.correct_answer}\n                        {quiz.incorrect_answers[0]}\n                      </Card.Text>\n                    </Card.Body>\n                  </Card>\n                </Col>\n              </Row>\n            </CardGroup>\n          );\n        })}\n      </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}