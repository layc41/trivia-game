{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/claudialay/Desktop/Mthree Projects/trivia-game/client/src/components/Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Container, Col, Card, CardGroup, Row } from \"react-bootstrap\";\nimport { generateQuiz } from \"../utils/API\";\nexport default function Quiz() {\n  _s();\n\n  const [quizData, setQuizData] = useState([]);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      const response = await generateQuiz();\n\n      if (!response.ok) {\n        throw new Error(\"something went wrong!\");\n      }\n\n      const {\n        results\n      } = await response.json();\n      const quizData = results.map(quiz => ({\n        question: quiz.question,\n        right: quiz.correct,\n        wrong: quiz.wrong\n      }));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: quizData.map(quiz => {\n        return /*#__PURE__*/_jsxDEV(CardGroup, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                border: \"dark\",\n                children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                    className: \"text-center card-title\",\n                    children: quiz.question\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 38,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: [quiz.correct, quiz.wrong]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 42,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Quiz, \"3C96RBN8PeaDvSsalExITWn7yTI=\");\n\n_c = Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/Users/claudialay/Desktop/Mthree Projects/trivia-game/client/src/components/Quiz.js"],"names":["React","Container","Col","Card","CardGroup","Row","generateQuiz","Quiz","quizData","setQuizData","useState","handleFormSubmit","event","preventDefault","response","ok","Error","results","json","map","quiz","question","right","correct","wrong","error","console"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,SAA/B,EAA0CC,GAA1C,QAAqD,iBAArD;AACA,SAASC,YAAT,QAA6B,cAA7B;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAE3B,QAAM,CAAEC,QAAF,EAAYC,WAAZ,IAA4BC,QAAQ,CAAC,EAAD,CAA1C;;AAEF,QAAMC,gBAAgB,GAAG,MAAOC,KAAP,IAAiB;AACxCA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMR,YAAY,EAAnC;;AACA,UAAI,CAACQ,QAAQ,CAACC,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AAED,YAAM;AAAEC,QAAAA;AAAF,UAAc,MAAMH,QAAQ,CAACI,IAAT,EAA1B;AACA,YAAMV,QAAQ,GAAGS,OAAO,CAACE,GAAR,CAAaC,IAAD,KAAW;AACtCC,QAAAA,QAAQ,EAAED,IAAI,CAACC,QADuB;AAEtCC,QAAAA,KAAK,EAAEF,IAAI,CAACG,OAF0B;AAGtCC,QAAAA,KAAK,EAAEJ,IAAI,CAACI;AAH0B,OAAX,CAAZ,CAAjB;AAKD,KAZD,CAYE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF,GAlBD;;AAmBA,sBACE;AAAA,2BACE,QAAC,SAAD;AAAA,gBACGjB,QAAQ,CAACW,GAAT,CAAcC,IAAD,IAAU;AACtB,4BACE,QAAC,SAAD;AAAA,iCACE,QAAC,GAAD;AAAA,mCACE,QAAC,GAAD;AAAA,qCACE,QAAC,IAAD;AAAM,gBAAA,MAAM,EAAC,MAAb;AAAA,uCACE,QAAC,IAAD,CAAM,IAAN;AAAA,0CACE,QAAC,IAAD,CAAM,KAAN;AAAY,oBAAA,SAAS,EAAC,wBAAtB;AAAA,8BACGA,IAAI,CAACC;AADR;AAAA;AAAA;AAAA;AAAA,0BADF,eAKE,QAAC,IAAD,CAAM,IAAN;AAAA,+BACGD,IAAI,CAACG,OADR,EAEGH,IAAI,CAACI,KAFR;AAAA;AAAA;AAAA;AAAA;AAAA,0BALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF;AAoBD,OArBA;AADH;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA4BD;;GAnDuBjB,I;;KAAAA,I","sourcesContent":["import React from \"react\";\nimport { Container, Col, Card, CardGroup, Row } from \"react-bootstrap\";\nimport { generateQuiz } from \"../utils/API\";\n\nexport default function Quiz() {\n\n    const [ quizData, setQuizData ] = useState([])\n    \n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const response = await generateQuiz();\n      if (!response.ok) {\n        throw new Error(\"something went wrong!\");\n      }\n\n      const { results } = await response.json();\n      const quizData = results.map((quiz) => ({\n        question: quiz.question,\n        right: quiz.correct,\n        wrong: quiz.wrong,\n      }));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return (\n    <>\n      <Container>\n        {quizData.map((quiz) => {\n          return (\n            <CardGroup>\n              <Row>\n                <Col>\n                  <Card border=\"dark\">\n                    <Card.Body>\n                      <Card.Title className=\"text-center card-title\">\n                        {quiz.question}\n                      </Card.Title>\n\n                      <Card.Text>\n                        {quiz.correct}\n                        {quiz.wrong}\n                      </Card.Text>\n                    </Card.Body>\n                  </Card>\n                </Col>\n              </Row>\n            </CardGroup>\n          );\n        })}\n      </Container>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}