{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/claudialay/Desktop/Mthree Projects/trivia-game/client/src/components/Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Container, Col, Card, CardGroup, Row } from \"react-bootstrap\";\nimport { generateQuiz } from \"../utils/API\";\n\nfunction Quiz() {\n  _s();\n\n  const [quizData, setQuizData] = useState([]);\n  const [answersArray, setAnswersArray] = useState([]);\n  const [score, setScore] = useState(0);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      await generateQuiz().then(response => response.json()).then(data => setQuizData(JSON.parse(JSON.stringify(data.results).replace(/&quot;/g, \"''\").replace(/&#039;/g, \"'\"))));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleClickAnswer = (event, bool) => {\n    let id = event.target.id;\n    let answer = id.split('-')[1];\n    let questionIndex = id.split('-')[0];\n    var myArray = answersArray;\n    myArray[questionIndex] = answer === 'true';\n    setAnswersArray(myArray);\n  };\n\n  const handleSubmitQuiz = event => {\n    let correctAnswerArr = quizData.map(quiz => ({\n      correct: quiz.correct_answer\n    }));\n    console.log('correct', correctAnswerArr);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFormSubmit,\n        className: \"btn btn-dark rounded-pill\",\n        children: \"Create Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), quizData.map((quiz, index) => {\n      return /*#__PURE__*/_jsxDEV(CardGroup, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              border: \"dark\",\n              style: {\n                width: '58rem'\n              },\n              id: index + \"QuestionCard\",\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  className: \"text-center card-title\",\n                  children: quiz.question\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  className: \"text-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-primary\",\n                    id: index + \"-true\",\n                    onClick: e => handleClickAnswer(e, true),\n                    children: \"True\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-primary\",\n                    id: index + \"-false\",\n                    onClick: e => handleClickAnswer(e, false),\n                    children: \"False\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"btn btn-dark rounded-pill\",\n        href: \"/score\",\n        onClick: e => handleSubmitQuiz(),\n        children: \"Submit Quiz!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Quiz, \"p9TTdp+sOjSh8RG+oi7RhyUIilo=\");\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/Users/claudialay/Desktop/Mthree Projects/trivia-game/client/src/components/Quiz.js"],"names":["React","useState","Container","Col","Card","CardGroup","Row","generateQuiz","Quiz","quizData","setQuizData","answersArray","setAnswersArray","score","setScore","handleFormSubmit","event","preventDefault","then","response","json","data","JSON","parse","stringify","results","replace","error","console","handleClickAnswer","bool","id","target","answer","split","questionIndex","myArray","handleSubmitQuiz","correctAnswerArr","map","quiz","correct","correct_answer","log","index","width","question","e"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Container, Col, Card, CardGroup, Row} from \"react-bootstrap\";\nimport { generateQuiz } from \"../utils/API\";\n\nfunction Quiz() {\n    const [quizData, setQuizData] = useState([]);\n    const [answersArray, setAnswersArray] = useState([]);\n    const [score, setScore] = useState(0);\n\n    const handleFormSubmit = async (event) => {\n\n        event.preventDefault();\n        try {\n            \n            await generateQuiz()\n            .then((response) => response.json())\n            .then((data) => setQuizData(JSON.parse(JSON.stringify(data.results).replace(/&quot;/g, \"''\").replace(/&#039;/g, \"'\"))));\n            \n        } catch (error) {\n\n            console.error(error);\n\n        }\n    }\n\n    const handleClickAnswer = (event, bool) => {\n        \n        let id = event.target.id;\n        let answer = id.split('-')[1];\n        let questionIndex = id.split('-')[0];\n        var myArray = answersArray;\n        \n        myArray[questionIndex] = (answer === 'true');\n        setAnswersArray(myArray);\n\n    }\n\n    const handleSubmitQuiz = (event) => {\n        \n        let correctAnswerArr = quizData.map((quiz) => ({ correct: quiz.correct_answer}))\n        console.log('correct', correctAnswerArr)\n        \n    }\n\n    return (\n      <Container>\n        <div className=\"text-center\">\n          <button onClick={handleFormSubmit} className=\"btn btn-dark rounded-pill\">Create Quiz</button>\n        </div>\n        \n        {quizData.map((quiz, index) => {\n          return (\n            <CardGroup key={index} >\n              <Row>\n                <Col>\n                  <Card border=\"dark\" style={{width: '58rem'}} id={index+\"QuestionCard\"}>\n                    <Card.Body>\n                      <Card.Title className=\"text-center card-title\">\n                        {quiz.question}\n                      </Card.Title>\n                      <Card.Text className='text-center'>\n                        <button className=\"btn btn-primary\" id={index+\"-true\"} onClick={(e)=>handleClickAnswer(e,true)}>True</button>\n                        <button className=\"btn btn-primary\" id={index+\"-false\"} onClick={(e)=>handleClickAnswer(e,false)}>False</button>\n                      </Card.Text>\n                    </Card.Body>\n                  </Card>\n                </Col>\n              </Row>\n            </CardGroup>\n          );\n        })}\n\n        <div className=\"text-center\">\n            <a className=\"btn btn-dark rounded-pill\" href=\"/score\" onClick={(e)=>handleSubmitQuiz()}>Submit Quiz!</a>\n        </div>\n      </Container>\n  );\n}\n\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}